class Solution {
public:
    int maxElement(vector<int>& bloomDay) {
        int maxi = INT_MIN;
        int n = bloomDay.size();
        for (int i= 0; i < n; i++) {
            maxi = max(maxi, bloomDay[i]);
        }
        return maxi;
    }

    int BloomedFlowers(vector<int>& bloomDay, int mid, int k) {
        int bouquets = 0;  
        int consecutiveCount = 0;   
        

        for (int i = 0; i < bloomDay.size(); i++) {
            if (bloomDay[i] <= mid) {
                consecutiveCount++;  
                if (consecutiveCount >= k) {
                    bouquets++;   
                    consecutiveCount = 0;   
                }
            } else {
                consecutiveCount = 0;  
            }
        }
        return bouquets;
    }
    


    int minDays(vector<int>& bloomDay, int m, int k) {
        int low = 1;
        int high = maxElement(bloomDay);
        int ans = -1;

        while ( low <= high ) {
            int mid = (low + high) / 2;

            if ( BloomedFlowers(bloomDay, mid, k) >= m ) {
                ans = mid;
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return ans;
    }
};
